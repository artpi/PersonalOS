{
	"openapi": "3.1.0",
	"info": {
	  "title": "PersonalOS API",
	  "version": "1.0.0"
	},
	"servers": [
	  {
		"url": "https://a492-94-172-23-89.ngrok-free.app/index.php?rest_route=/"
	  }
	],
	"paths": {
	  "/pos/v1/todo": {
		"get": {
		  "operationId": "todo_get_items",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "context",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "view",
				  "embed",
				  "edit"
				],
				"default": "view"
			  },
			  "description": "Scope under which the request is made; determines fields present in response."
			},
			{
			  "name": "page",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer",
				"default": 1
			  },
			  "description": "Current page of the collection."
			},
			{
			  "name": "per_page",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer",
				"default": 10
			  },
			  "description": "Maximum number of items to be returned in result set."
			},
			{
			  "name": "search",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "Limit results to those matching a string."
			},
			{
			  "name": "after",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "Limit response to posts published after a given ISO8601 compliant date."
			},
			{
			  "name": "modified_after",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "Limit response to posts modified after a given ISO8601 compliant date."
			},
			{
			  "name": "before",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "Limit response to posts published before a given ISO8601 compliant date."
			},
			{
			  "name": "modified_before",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "Limit response to posts modified before a given ISO8601 compliant date."
			},
			{
			  "name": "exclude",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				},
				"default": []
			  },
			  "description": "Ensure result set excludes specific IDs."
			},
			{
			  "name": "include",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				},
				"default": []
			  },
			  "description": "Limit result set to specific IDs."
			},
			{
			  "name": "search_semantics",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "exact"
				]
			  },
			  "description": "How to interpret the search input."
			},
			{
			  "name": "offset",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Offset the result set by a specific number of items."
			},
			{
			  "name": "order",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "asc",
				  "desc"
				],
				"default": "desc"
			  },
			  "description": "Order sort attribute ascending or descending."
			},
			{
			  "name": "orderby",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "author",
				  "date",
				  "id",
				  "include",
				  "modified",
				  "parent",
				  "relevance",
				  "slug",
				  "include_slugs",
				  "title"
				],
				"default": "date"
			  },
			  "description": "Sort collection by post attribute."
			},
			{
			  "name": "search_columns",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "string",
				  "enum": [
					"post_title",
					"post_content",
					"post_excerpt"
				  ]
				},
				"default": []
			  },
			  "description": "Array of column names to be searched."
			},
			{
			  "name": "slug",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "string"
				}
			  },
			  "description": "Limit result set to posts with one or more specific slugs."
			},
			{
			  "name": "status",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "string",
				  "enum": [
					"publish",
					"future",
					"draft",
					"pending",
					"private",
					"trash",
					"auto-draft",
					"inherit",
					"request-pending",
					"request-confirmed",
					"request-failed",
					"request-completed",
					"any"
				  ]
				},
				"default": [
				  "publish"
				]
			  },
			  "description": "Limit result set to posts assigned one or more statuses."
			},
			{
			  "name": "tax_relation",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "AND",
				  "OR"
				]
			  },
			  "description": "Limit result set based on relationship between multiple taxonomies."
			},
			{
			  "name": "notebook",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "Limit result set to items with specific terms assigned in the notebook taxonomy."
			},
			{
			  "name": "notebook_exclude",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "Limit result set to items except those with specific terms assigned in the notebook taxonomy."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  }
		},
		"post": {
		  "operationId": "todo_create_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "date",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The date the post was published, in the site's timezone."
			},
			{
			  "name": "date_gmt",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The date the post was published, as GMT."
			},
			{
			  "name": "slug",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "An alphanumeric identifier for the post unique to its type."
			},
			{
			  "name": "status",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "publish",
				  "future",
				  "draft",
				  "pending",
				  "private"
				]
			  },
			  "description": "A named status for the post."
			},
			{
			  "name": "password",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "A password to protect access to the content and excerpt."
			},
			{
			  "name": "title",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The title for the post."
			},
			{
			  "name": "excerpt",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The excerpt for the post."
			},
			{
			  "name": "comment_status",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "open",
				  "closed"
				]
			  },
			  "description": "Whether or not comments are open on the post."
			},
			{
			  "name": "ping_status",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "open",
				  "closed"
				]
			  },
			  "description": "Whether or not the post can be pinged."
			},
			{
			  "name": "meta",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "Meta fields."
			},
			{
			  "name": "template",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The theme file to use to display the post."
			},
			{
			  "name": "notebook",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				}
			  },
			  "description": "The terms assigned to the post in the notebook taxonomy."
			},
			{
			  "name": "blocking",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				}
			  },
			  "description": "TODOs that are blocked by this TODO."
			},
			{
			  "name": "scheduled",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Scheduled time for this TODO."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  },
		  "requestBody": {
			"required": true,
			"content": {
			  "application/json": {
				"schema": {
				  "type": "object",
				  "properties": {
					"date": {
					  "type": "string",
					  "description": "The date the post was published, in the site's timezone."
					},
					"date_gmt": {
					  "type": "string",
					  "description": "The date the post was published, as GMT."
					},
					"slug": {
					  "type": "string",
					  "description": "An alphanumeric identifier for the post unique to its type."
					},
					"status": {
					  "type": "string",
					  "enum": [
						"publish",
						"future",
						"draft",
						"pending",
						"private"
					  ],
					  "description": "A named status for the post."
					},
					"password": {
					  "type": "string",
					  "description": "A password to protect access to the content and excerpt."
					},
					"title": {
					  "type": "object",
					  "description": "The title for the post."
					},
					"excerpt": {
					  "type": "object",
					  "description": "The excerpt for the post."
					},
					"comment_status": {
					  "type": "string",
					  "enum": [
						"open",
						"closed"
					  ],
					  "description": "Whether or not comments are open on the post."
					},
					"ping_status": {
					  "type": "string",
					  "enum": [
						"open",
						"closed"
					  ],
					  "description": "Whether or not the post can be pinged."
					},
					"meta": {
					  "type": "object",
					  "description": "Meta fields."
					},
					"template": {
					  "type": "string",
					  "description": "The theme file to use to display the post."
					},
					"notebook": {
					  "type": "array",
					  "items": {
						"type": "integer"
					  },
					  "description": "The terms assigned to the post in the notebook taxonomy."
					},
					"blocking": {
					  "type": "array",
					  "items": {
						"type": "integer"
					  },
					  "description": "TODOs that are blocked by this TODO."
					},
					"scheduled": {
					  "type": "integer",
					  "description": "Scheduled time for this TODO."
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/pos/v1/todo/{id}": {
		"get": {
		  "operationId": "todo_get_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "id",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Unique identifier for the post."
			},
			{
			  "name": "context",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "view",
				  "embed",
				  "edit"
				],
				"default": "view"
			  },
			  "description": "Scope under which the request is made; determines fields present in response."
			},
			{
			  "name": "excerpt_length",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Override the default excerpt length."
			},
			{
			  "name": "password",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The password for the post if it is password protected."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  }
		},
		"post": {
		  "operationId": "todo_update_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "id",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Unique identifier for the post."
			},
			{
			  "name": "date",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The date the post was published, in the site's timezone."
			},
			{
			  "name": "date_gmt",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The date the post was published, as GMT."
			},
			{
			  "name": "slug",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "An alphanumeric identifier for the post unique to its type."
			},
			{
			  "name": "status",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "publish",
				  "future",
				  "draft",
				  "pending",
				  "private"
				]
			  },
			  "description": "A named status for the post."
			},
			{
			  "name": "password",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "A password to protect access to the content and excerpt."
			},
			{
			  "name": "title",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The title for the post."
			},
			{
			  "name": "excerpt",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The excerpt for the post."
			},
			{
			  "name": "comment_status",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "open",
				  "closed"
				]
			  },
			  "description": "Whether or not comments are open on the post."
			},
			{
			  "name": "ping_status",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "open",
				  "closed"
				]
			  },
			  "description": "Whether or not the post can be pinged."
			},
			{
			  "name": "meta",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "Meta fields."
			},
			{
			  "name": "template",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The theme file to use to display the post."
			},
			{
			  "name": "notebook",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				}
			  },
			  "description": "The terms assigned to the post in the notebook taxonomy."
			},
			{
			  "name": "blocking",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				}
			  },
			  "description": "TODOs that are blocked by this TODO."
			},
			{
			  "name": "scheduled",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Scheduled time for this TODO."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  },
		  "requestBody": {
			"required": true,
			"content": {
			  "application/json": {
				"schema": {
				  "type": "object",
				  "properties": {
					"id": {
					  "type": "integer",
					  "description": "Unique identifier for the post."
					},
					"date": {
					  "type": "string",
					  "description": "The date the post was published, in the site's timezone."
					},
					"date_gmt": {
					  "type": "string",
					  "description": "The date the post was published, as GMT."
					},
					"slug": {
					  "type": "string",
					  "description": "An alphanumeric identifier for the post unique to its type."
					},
					"status": {
					  "type": "string",
					  "enum": [
						"publish",
						"future",
						"draft",
						"pending",
						"private"
					  ],
					  "description": "A named status for the post."
					},
					"password": {
					  "type": "string",
					  "description": "A password to protect access to the content and excerpt."
					},
					"title": {
					  "type": "object",
					  "description": "The title for the post."
					},
					"excerpt": {
					  "type": "object",
					  "description": "The excerpt for the post."
					},
					"comment_status": {
					  "type": "string",
					  "enum": [
						"open",
						"closed"
					  ],
					  "description": "Whether or not comments are open on the post."
					},
					"ping_status": {
					  "type": "string",
					  "enum": [
						"open",
						"closed"
					  ],
					  "description": "Whether or not the post can be pinged."
					},
					"meta": {
					  "type": "object",
					  "description": "Meta fields."
					},
					"template": {
					  "type": "string",
					  "description": "The theme file to use to display the post."
					},
					"notebook": {
					  "type": "array",
					  "items": {
						"type": "integer"
					  },
					  "description": "The terms assigned to the post in the notebook taxonomy."
					},
					"blocking": {
					  "type": "array",
					  "items": {
						"type": "integer"
					  },
					  "description": "TODOs that are blocked by this TODO."
					},
					"scheduled": {
					  "type": "integer",
					  "description": "Scheduled time for this TODO."
					}
				  }
				}
			  }
			}
		  }
		},
		"put": {
		  "operationId": "todo_update_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "id",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Unique identifier for the post."
			},
			{
			  "name": "date",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The date the post was published, in the site's timezone."
			},
			{
			  "name": "date_gmt",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The date the post was published, as GMT."
			},
			{
			  "name": "slug",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "An alphanumeric identifier for the post unique to its type."
			},
			{
			  "name": "status",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "publish",
				  "future",
				  "draft",
				  "pending",
				  "private"
				]
			  },
			  "description": "A named status for the post."
			},
			{
			  "name": "password",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "A password to protect access to the content and excerpt."
			},
			{
			  "name": "title",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The title for the post."
			},
			{
			  "name": "excerpt",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The excerpt for the post."
			},
			{
			  "name": "comment_status",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "open",
				  "closed"
				]
			  },
			  "description": "Whether or not comments are open on the post."
			},
			{
			  "name": "ping_status",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "open",
				  "closed"
				]
			  },
			  "description": "Whether or not the post can be pinged."
			},
			{
			  "name": "meta",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "Meta fields."
			},
			{
			  "name": "template",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The theme file to use to display the post."
			},
			{
			  "name": "notebook",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				}
			  },
			  "description": "The terms assigned to the post in the notebook taxonomy."
			},
			{
			  "name": "blocking",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				}
			  },
			  "description": "TODOs that are blocked by this TODO."
			},
			{
			  "name": "scheduled",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Scheduled time for this TODO."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  },
		  "requestBody": {
			"required": true,
			"content": {
			  "application/json": {
				"schema": {
				  "type": "object",
				  "properties": {
					"id": {
					  "type": "integer",
					  "description": "Unique identifier for the post."
					},
					"date": {
					  "type": "string",
					  "description": "The date the post was published, in the site's timezone."
					},
					"date_gmt": {
					  "type": "string",
					  "description": "The date the post was published, as GMT."
					},
					"slug": {
					  "type": "string",
					  "description": "An alphanumeric identifier for the post unique to its type."
					},
					"status": {
					  "type": "string",
					  "enum": [
						"publish",
						"future",
						"draft",
						"pending",
						"private"
					  ],
					  "description": "A named status for the post."
					},
					"password": {
					  "type": "string",
					  "description": "A password to protect access to the content and excerpt."
					},
					"title": {
					  "type": "object",
					  "description": "The title for the post."
					},
					"excerpt": {
					  "type": "object",
					  "description": "The excerpt for the post."
					},
					"comment_status": {
					  "type": "string",
					  "enum": [
						"open",
						"closed"
					  ],
					  "description": "Whether or not comments are open on the post."
					},
					"ping_status": {
					  "type": "string",
					  "enum": [
						"open",
						"closed"
					  ],
					  "description": "Whether or not the post can be pinged."
					},
					"meta": {
					  "type": "object",
					  "description": "Meta fields."
					},
					"template": {
					  "type": "string",
					  "description": "The theme file to use to display the post."
					},
					"notebook": {
					  "type": "array",
					  "items": {
						"type": "integer"
					  },
					  "description": "The terms assigned to the post in the notebook taxonomy."
					},
					"blocking": {
					  "type": "array",
					  "items": {
						"type": "integer"
					  },
					  "description": "TODOs that are blocked by this TODO."
					},
					"scheduled": {
					  "type": "integer",
					  "description": "Scheduled time for this TODO."
					}
				  }
				}
			  }
			}
		  }
		},
		"patch": {
		  "operationId": "todo_update_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "id",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Unique identifier for the post."
			},
			{
			  "name": "date",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The date the post was published, in the site's timezone."
			},
			{
			  "name": "date_gmt",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The date the post was published, as GMT."
			},
			{
			  "name": "slug",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "An alphanumeric identifier for the post unique to its type."
			},
			{
			  "name": "status",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "publish",
				  "future",
				  "draft",
				  "pending",
				  "private"
				]
			  },
			  "description": "A named status for the post."
			},
			{
			  "name": "password",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "A password to protect access to the content and excerpt."
			},
			{
			  "name": "title",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The title for the post."
			},
			{
			  "name": "excerpt",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The excerpt for the post."
			},
			{
			  "name": "comment_status",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "open",
				  "closed"
				]
			  },
			  "description": "Whether or not comments are open on the post."
			},
			{
			  "name": "ping_status",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "open",
				  "closed"
				]
			  },
			  "description": "Whether or not the post can be pinged."
			},
			{
			  "name": "meta",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "Meta fields."
			},
			{
			  "name": "template",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The theme file to use to display the post."
			},
			{
			  "name": "notebook",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				}
			  },
			  "description": "The terms assigned to the post in the notebook taxonomy."
			},
			{
			  "name": "blocking",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				}
			  },
			  "description": "TODOs that are blocked by this TODO."
			},
			{
			  "name": "scheduled",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Scheduled time for this TODO."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  },
		  "requestBody": {
			"required": true,
			"content": {
			  "application/json": {
				"schema": {
				  "type": "object",
				  "properties": {
					"id": {
					  "type": "integer",
					  "description": "Unique identifier for the post."
					},
					"date": {
					  "type": "string",
					  "description": "The date the post was published, in the site's timezone."
					},
					"date_gmt": {
					  "type": "string",
					  "description": "The date the post was published, as GMT."
					},
					"slug": {
					  "type": "string",
					  "description": "An alphanumeric identifier for the post unique to its type."
					},
					"status": {
					  "type": "string",
					  "enum": [
						"publish",
						"future",
						"draft",
						"pending",
						"private"
					  ],
					  "description": "A named status for the post."
					},
					"password": {
					  "type": "string",
					  "description": "A password to protect access to the content and excerpt."
					},
					"title": {
					  "type": "object",
					  "description": "The title for the post."
					},
					"excerpt": {
					  "type": "object",
					  "description": "The excerpt for the post."
					},
					"comment_status": {
					  "type": "string",
					  "enum": [
						"open",
						"closed"
					  ],
					  "description": "Whether or not comments are open on the post."
					},
					"ping_status": {
					  "type": "string",
					  "enum": [
						"open",
						"closed"
					  ],
					  "description": "Whether or not the post can be pinged."
					},
					"meta": {
					  "type": "object",
					  "description": "Meta fields."
					},
					"template": {
					  "type": "string",
					  "description": "The theme file to use to display the post."
					},
					"notebook": {
					  "type": "array",
					  "items": {
						"type": "integer"
					  },
					  "description": "The terms assigned to the post in the notebook taxonomy."
					},
					"blocking": {
					  "type": "array",
					  "items": {
						"type": "integer"
					  },
					  "description": "TODOs that are blocked by this TODO."
					},
					"scheduled": {
					  "type": "integer",
					  "description": "Scheduled time for this TODO."
					}
				  }
				}
			  }
			}
		  }
		},
		"delete": {
		  "operationId": "todo_delete_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "id",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Unique identifier for the post."
			},
			{
			  "name": "force",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "boolean",
				"default": false
			  },
			  "description": "Whether to bypass Trash and force deletion."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  }
		}
	  },
	  "/pos/v1/notes": {
		"get": {
		  "operationId": "notes_get_items",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "context",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "view",
				  "embed",
				  "edit"
				],
				"default": "view"
			  },
			  "description": "Scope under which the request is made; determines fields present in response."
			},
			{
			  "name": "page",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer",
				"default": 1
			  },
			  "description": "Current page of the collection."
			},
			{
			  "name": "per_page",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer",
				"default": 10
			  },
			  "description": "Maximum number of items to be returned in result set."
			},
			{
			  "name": "search",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "Limit results to those matching a string."
			},
			{
			  "name": "after",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "Limit response to posts published after a given ISO8601 compliant date."
			},
			{
			  "name": "modified_after",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "Limit response to posts modified after a given ISO8601 compliant date."
			},
			{
			  "name": "before",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "Limit response to posts published before a given ISO8601 compliant date."
			},
			{
			  "name": "modified_before",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "Limit response to posts modified before a given ISO8601 compliant date."
			},
			{
			  "name": "exclude",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				},
				"default": []
			  },
			  "description": "Ensure result set excludes specific IDs."
			},
			{
			  "name": "include",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				},
				"default": []
			  },
			  "description": "Limit result set to specific IDs."
			},
			{
			  "name": "search_semantics",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "exact"
				]
			  },
			  "description": "How to interpret the search input."
			},
			{
			  "name": "offset",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Offset the result set by a specific number of items."
			},
			{
			  "name": "order",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "asc",
				  "desc"
				],
				"default": "desc"
			  },
			  "description": "Order sort attribute ascending or descending."
			},
			{
			  "name": "orderby",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "author",
				  "date",
				  "id",
				  "include",
				  "modified",
				  "parent",
				  "relevance",
				  "slug",
				  "include_slugs",
				  "title"
				],
				"default": "date"
			  },
			  "description": "Sort collection by post attribute."
			},
			{
			  "name": "search_columns",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "string",
				  "enum": [
					"post_title",
					"post_content",
					"post_excerpt"
				  ]
				},
				"default": []
			  },
			  "description": "Array of column names to be searched."
			},
			{
			  "name": "slug",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "string"
				}
			  },
			  "description": "Limit result set to posts with one or more specific slugs."
			},
			{
			  "name": "status",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "string",
				  "enum": [
					"publish",
					"future",
					"draft",
					"pending",
					"private",
					"trash",
					"auto-draft",
					"inherit",
					"request-pending",
					"request-confirmed",
					"request-failed",
					"request-completed",
					"any"
				  ]
				},
				"default": [
				  "publish"
				]
			  },
			  "description": "Limit result set to posts assigned one or more statuses."
			},
			{
			  "name": "tax_relation",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "AND",
				  "OR"
				]
			  },
			  "description": "Limit result set based on relationship between multiple taxonomies."
			},
			{
			  "name": "tags",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "Limit result set to items with specific terms assigned in the tags taxonomy."
			},
			{
			  "name": "tags_exclude",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "Limit result set to items except those with specific terms assigned in the tags taxonomy."
			},
			{
			  "name": "notebook",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "Limit result set to items with specific terms assigned in the notebook taxonomy."
			},
			{
			  "name": "notebook_exclude",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "Limit result set to items except those with specific terms assigned in the notebook taxonomy."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  }
		},
		"post": {
		  "operationId": "notes_create_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "date",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The date the post was published, in the site's timezone."
			},
			{
			  "name": "date_gmt",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The date the post was published, as GMT."
			},
			{
			  "name": "slug",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "An alphanumeric identifier for the post unique to its type."
			},
			{
			  "name": "status",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "publish",
				  "future",
				  "draft",
				  "pending",
				  "private"
				]
			  },
			  "description": "A named status for the post."
			},
			{
			  "name": "password",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "A password to protect access to the content and excerpt."
			},
			{
			  "name": "title",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The title for the post."
			},
			{
			  "name": "content",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The content for the post."
			},
			{
			  "name": "excerpt",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The excerpt for the post."
			},
			{
			  "name": "meta",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "Meta fields."
			},
			{
			  "name": "template",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The theme file to use to display the post."
			},
			{
			  "name": "tags",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				}
			  },
			  "description": "The terms assigned to the post in the post_tag taxonomy."
			},
			{
			  "name": "notebook",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				}
			  },
			  "description": "The terms assigned to the post in the notebook taxonomy."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  },
		  "requestBody": {
			"required": true,
			"content": {
			  "application/json": {
				"schema": {
				  "type": "object",
				  "properties": {
					"date": {
					  "type": "string",
					  "description": "The date the post was published, in the site's timezone."
					},
					"date_gmt": {
					  "type": "string",
					  "description": "The date the post was published, as GMT."
					},
					"slug": {
					  "type": "string",
					  "description": "An alphanumeric identifier for the post unique to its type."
					},
					"status": {
					  "type": "string",
					  "enum": [
						"publish",
						"future",
						"draft",
						"pending",
						"private"
					  ],
					  "description": "A named status for the post."
					},
					"password": {
					  "type": "string",
					  "description": "A password to protect access to the content and excerpt."
					},
					"title": {
					  "type": "object",
					  "description": "The title for the post."
					},
					"content": {
					  "type": "object",
					  "description": "The content for the post."
					},
					"excerpt": {
					  "type": "object",
					  "description": "The excerpt for the post."
					},
					"meta": {
					  "type": "object",
					  "description": "Meta fields."
					},
					"template": {
					  "type": "string",
					  "description": "The theme file to use to display the post."
					},
					"tags": {
					  "type": "array",
					  "items": {
						"type": "integer"
					  },
					  "description": "The terms assigned to the post in the post_tag taxonomy."
					},
					"notebook": {
					  "type": "array",
					  "items": {
						"type": "integer"
					  },
					  "description": "The terms assigned to the post in the notebook taxonomy."
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/pos/v1/notes/{id}": {
		"get": {
		  "operationId": "notes_get_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "id",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Unique identifier for the post."
			},
			{
			  "name": "context",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "view",
				  "embed",
				  "edit"
				],
				"default": "view"
			  },
			  "description": "Scope under which the request is made; determines fields present in response."
			},
			{
			  "name": "excerpt_length",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Override the default excerpt length."
			},
			{
			  "name": "password",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The password for the post if it is password protected."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  }
		},
		"post": {
		  "operationId": "notes_update_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "id",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Unique identifier for the post."
			},
			{
			  "name": "date",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The date the post was published, in the site's timezone."
			},
			{
			  "name": "date_gmt",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The date the post was published, as GMT."
			},
			{
			  "name": "slug",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "An alphanumeric identifier for the post unique to its type."
			},
			{
			  "name": "status",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "publish",
				  "future",
				  "draft",
				  "pending",
				  "private"
				]
			  },
			  "description": "A named status for the post."
			},
			{
			  "name": "password",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "A password to protect access to the content and excerpt."
			},
			{
			  "name": "title",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The title for the post."
			},
			{
			  "name": "content",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The content for the post."
			},
			{
			  "name": "excerpt",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The excerpt for the post."
			},
			{
			  "name": "meta",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "Meta fields."
			},
			{
			  "name": "template",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The theme file to use to display the post."
			},
			{
			  "name": "tags",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				}
			  },
			  "description": "The terms assigned to the post in the post_tag taxonomy."
			},
			{
			  "name": "notebook",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				}
			  },
			  "description": "The terms assigned to the post in the notebook taxonomy."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  },
		  "requestBody": {
			"required": true,
			"content": {
			  "application/json": {
				"schema": {
				  "type": "object",
				  "properties": {
					"id": {
					  "type": "integer",
					  "description": "Unique identifier for the post."
					},
					"date": {
					  "type": "string",
					  "description": "The date the post was published, in the site's timezone."
					},
					"date_gmt": {
					  "type": "string",
					  "description": "The date the post was published, as GMT."
					},
					"slug": {
					  "type": "string",
					  "description": "An alphanumeric identifier for the post unique to its type."
					},
					"status": {
					  "type": "string",
					  "enum": [
						"publish",
						"future",
						"draft",
						"pending",
						"private"
					  ],
					  "description": "A named status for the post."
					},
					"password": {
					  "type": "string",
					  "description": "A password to protect access to the content and excerpt."
					},
					"title": {
					  "type": "object",
					  "description": "The title for the post."
					},
					"content": {
					  "type": "object",
					  "description": "The content for the post."
					},
					"excerpt": {
					  "type": "object",
					  "description": "The excerpt for the post."
					},
					"meta": {
					  "type": "object",
					  "description": "Meta fields."
					},
					"template": {
					  "type": "string",
					  "description": "The theme file to use to display the post."
					},
					"tags": {
					  "type": "array",
					  "items": {
						"type": "integer"
					  },
					  "description": "The terms assigned to the post in the post_tag taxonomy."
					},
					"notebook": {
					  "type": "array",
					  "items": {
						"type": "integer"
					  },
					  "description": "The terms assigned to the post in the notebook taxonomy."
					}
				  }
				}
			  }
			}
		  }
		},
		"put": {
		  "operationId": "notes_update_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "id",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Unique identifier for the post."
			},
			{
			  "name": "date",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The date the post was published, in the site's timezone."
			},
			{
			  "name": "date_gmt",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The date the post was published, as GMT."
			},
			{
			  "name": "slug",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "An alphanumeric identifier for the post unique to its type."
			},
			{
			  "name": "status",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "publish",
				  "future",
				  "draft",
				  "pending",
				  "private"
				]
			  },
			  "description": "A named status for the post."
			},
			{
			  "name": "password",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "A password to protect access to the content and excerpt."
			},
			{
			  "name": "title",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The title for the post."
			},
			{
			  "name": "content",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The content for the post."
			},
			{
			  "name": "excerpt",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The excerpt for the post."
			},
			{
			  "name": "meta",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "Meta fields."
			},
			{
			  "name": "template",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The theme file to use to display the post."
			},
			{
			  "name": "tags",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				}
			  },
			  "description": "The terms assigned to the post in the post_tag taxonomy."
			},
			{
			  "name": "notebook",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				}
			  },
			  "description": "The terms assigned to the post in the notebook taxonomy."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  },
		  "requestBody": {
			"required": true,
			"content": {
			  "application/json": {
				"schema": {
				  "type": "object",
				  "properties": {
					"id": {
					  "type": "integer",
					  "description": "Unique identifier for the post."
					},
					"date": {
					  "type": "string",
					  "description": "The date the post was published, in the site's timezone."
					},
					"date_gmt": {
					  "type": "string",
					  "description": "The date the post was published, as GMT."
					},
					"slug": {
					  "type": "string",
					  "description": "An alphanumeric identifier for the post unique to its type."
					},
					"status": {
					  "type": "string",
					  "enum": [
						"publish",
						"future",
						"draft",
						"pending",
						"private"
					  ],
					  "description": "A named status for the post."
					},
					"password": {
					  "type": "string",
					  "description": "A password to protect access to the content and excerpt."
					},
					"title": {
					  "type": "object",
					  "description": "The title for the post."
					},
					"content": {
					  "type": "object",
					  "description": "The content for the post."
					},
					"excerpt": {
					  "type": "object",
					  "description": "The excerpt for the post."
					},
					"meta": {
					  "type": "object",
					  "description": "Meta fields."
					},
					"template": {
					  "type": "string",
					  "description": "The theme file to use to display the post."
					},
					"tags": {
					  "type": "array",
					  "items": {
						"type": "integer"
					  },
					  "description": "The terms assigned to the post in the post_tag taxonomy."
					},
					"notebook": {
					  "type": "array",
					  "items": {
						"type": "integer"
					  },
					  "description": "The terms assigned to the post in the notebook taxonomy."
					}
				  }
				}
			  }
			}
		  }
		},
		"patch": {
		  "operationId": "notes_update_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "id",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Unique identifier for the post."
			},
			{
			  "name": "date",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The date the post was published, in the site's timezone."
			},
			{
			  "name": "date_gmt",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The date the post was published, as GMT."
			},
			{
			  "name": "slug",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "An alphanumeric identifier for the post unique to its type."
			},
			{
			  "name": "status",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "publish",
				  "future",
				  "draft",
				  "pending",
				  "private"
				]
			  },
			  "description": "A named status for the post."
			},
			{
			  "name": "password",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "A password to protect access to the content and excerpt."
			},
			{
			  "name": "title",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The title for the post."
			},
			{
			  "name": "content",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The content for the post."
			},
			{
			  "name": "excerpt",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The excerpt for the post."
			},
			{
			  "name": "meta",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "Meta fields."
			},
			{
			  "name": "template",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The theme file to use to display the post."
			},
			{
			  "name": "tags",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				}
			  },
			  "description": "The terms assigned to the post in the post_tag taxonomy."
			},
			{
			  "name": "notebook",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				}
			  },
			  "description": "The terms assigned to the post in the notebook taxonomy."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  },
		  "requestBody": {
			"required": true,
			"content": {
			  "application/json": {
				"schema": {
				  "type": "object",
				  "properties": {
					"id": {
					  "type": "integer",
					  "description": "Unique identifier for the post."
					},
					"date": {
					  "type": "string",
					  "description": "The date the post was published, in the site's timezone."
					},
					"date_gmt": {
					  "type": "string",
					  "description": "The date the post was published, as GMT."
					},
					"slug": {
					  "type": "string",
					  "description": "An alphanumeric identifier for the post unique to its type."
					},
					"status": {
					  "type": "string",
					  "enum": [
						"publish",
						"future",
						"draft",
						"pending",
						"private"
					  ],
					  "description": "A named status for the post."
					},
					"password": {
					  "type": "string",
					  "description": "A password to protect access to the content and excerpt."
					},
					"title": {
					  "type": "object",
					  "description": "The title for the post."
					},
					"content": {
					  "type": "object",
					  "description": "The content for the post."
					},
					"excerpt": {
					  "type": "object",
					  "description": "The excerpt for the post."
					},
					"meta": {
					  "type": "object",
					  "description": "Meta fields."
					},
					"template": {
					  "type": "string",
					  "description": "The theme file to use to display the post."
					},
					"tags": {
					  "type": "array",
					  "items": {
						"type": "integer"
					  },
					  "description": "The terms assigned to the post in the post_tag taxonomy."
					},
					"notebook": {
					  "type": "array",
					  "items": {
						"type": "integer"
					  },
					  "description": "The terms assigned to the post in the notebook taxonomy."
					}
				  }
				}
			  }
			}
		  }
		},
		"delete": {
		  "operationId": "notes_delete_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "id",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Unique identifier for the post."
			},
			{
			  "name": "force",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "boolean",
				"default": false
			  },
			  "description": "Whether to bypass Trash and force deletion."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  }
		}
	  },
	  "/pos/v1/notes/{parent}/revisions": {
		"get": {
		  "operationId": "notes_get_items",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "parent",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "parent",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "The ID for the parent of the revision."
			},
			{
			  "name": "context",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "view",
				  "embed",
				  "edit"
				],
				"default": "view"
			  },
			  "description": "Scope under which the request is made; determines fields present in response."
			},
			{
			  "name": "page",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer",
				"default": 1
			  },
			  "description": "Current page of the collection."
			},
			{
			  "name": "per_page",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Maximum number of items to be returned in result set."
			},
			{
			  "name": "search",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "Limit results to those matching a string."
			},
			{
			  "name": "exclude",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				},
				"default": []
			  },
			  "description": "Ensure result set excludes specific IDs."
			},
			{
			  "name": "include",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				},
				"default": []
			  },
			  "description": "Limit result set to specific IDs."
			},
			{
			  "name": "offset",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Offset the result set by a specific number of items."
			},
			{
			  "name": "order",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "asc",
				  "desc"
				],
				"default": "desc"
			  },
			  "description": "Order sort attribute ascending or descending."
			},
			{
			  "name": "orderby",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "date",
				  "id",
				  "include",
				  "relevance",
				  "slug",
				  "include_slugs",
				  "title"
				],
				"default": "date"
			  },
			  "description": "Sort collection by object attribute."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  }
		}
	  },
	  "/pos/v1/notes/{parent}/revisions/{id}": {
		"get": {
		  "operationId": "notes_get_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "parent",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "parent",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "The ID for the parent of the revision."
			},
			{
			  "name": "id",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Unique identifier for the revision."
			},
			{
			  "name": "context",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "view",
				  "embed",
				  "edit"
				],
				"default": "view"
			  },
			  "description": "Scope under which the request is made; determines fields present in response."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  }
		},
		"delete": {
		  "operationId": "notes_delete_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "parent",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "parent",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "The ID for the parent of the revision."
			},
			{
			  "name": "id",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Unique identifier for the revision."
			},
			{
			  "name": "force",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "boolean",
				"default": false
			  },
			  "description": "Required to be true, as revisions do not support trashing."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  }
		}
	  },
	  "/pos/v1/notes/{id}/autosaves": {
		"get": {
		  "operationId": "notes_get_items",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "parent",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "The ID for the parent of the autosave."
			},
			{
			  "name": "context",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "view",
				  "embed",
				  "edit"
				],
				"default": "view"
			  },
			  "description": "Scope under which the request is made; determines fields present in response."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  }
		},
		"post": {
		  "operationId": "notes_create_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "parent",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "The ID for the parent of the autosave."
			},
			{
			  "name": "date",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The date the post was published, in the site's timezone."
			},
			{
			  "name": "date_gmt",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The date the post was published, as GMT."
			},
			{
			  "name": "slug",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "An alphanumeric identifier for the post unique to its type."
			},
			{
			  "name": "status",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "publish",
				  "future",
				  "draft",
				  "pending",
				  "private"
				]
			  },
			  "description": "A named status for the post."
			},
			{
			  "name": "password",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "A password to protect access to the content and excerpt."
			},
			{
			  "name": "title",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The title for the post."
			},
			{
			  "name": "content",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The content for the post."
			},
			{
			  "name": "excerpt",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "The excerpt for the post."
			},
			{
			  "name": "meta",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "Meta fields."
			},
			{
			  "name": "template",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "The theme file to use to display the post."
			},
			{
			  "name": "tags",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				}
			  },
			  "description": "The terms assigned to the post in the post_tag taxonomy."
			},
			{
			  "name": "notebook",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				}
			  },
			  "description": "The terms assigned to the post in the notebook taxonomy."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  },
		  "requestBody": {
			"required": true,
			"content": {
			  "application/json": {
				"schema": {
				  "type": "object",
				  "properties": {
					"parent": {
					  "type": "integer",
					  "description": "The ID for the parent of the autosave."
					},
					"date": {
					  "type": "string",
					  "description": "The date the post was published, in the site's timezone."
					},
					"date_gmt": {
					  "type": "string",
					  "description": "The date the post was published, as GMT."
					},
					"slug": {
					  "type": "string",
					  "description": "An alphanumeric identifier for the post unique to its type."
					},
					"status": {
					  "type": "string",
					  "enum": [
						"publish",
						"future",
						"draft",
						"pending",
						"private"
					  ],
					  "description": "A named status for the post."
					},
					"password": {
					  "type": "string",
					  "description": "A password to protect access to the content and excerpt."
					},
					"title": {
					  "type": "object",
					  "description": "The title for the post."
					},
					"content": {
					  "type": "object",
					  "description": "The content for the post."
					},
					"excerpt": {
					  "type": "object",
					  "description": "The excerpt for the post."
					},
					"meta": {
					  "type": "object",
					  "description": "Meta fields."
					},
					"template": {
					  "type": "string",
					  "description": "The theme file to use to display the post."
					},
					"tags": {
					  "type": "array",
					  "items": {
						"type": "integer"
					  },
					  "description": "The terms assigned to the post in the post_tag taxonomy."
					},
					"notebook": {
					  "type": "array",
					  "items": {
						"type": "integer"
					  },
					  "description": "The terms assigned to the post in the notebook taxonomy."
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/pos/v1/notes/{parent}/autosaves/{id}": {
		"get": {
		  "operationId": "notes_get_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "parent",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "parent",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "The ID for the parent of the autosave."
			},
			{
			  "name": "id",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "The ID for the autosave."
			},
			{
			  "name": "context",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "view",
				  "embed",
				  "edit"
				],
				"default": "view"
			  },
			  "description": "Scope under which the request is made; determines fields present in response."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  }
		}
	  },
	  "/pos/v1/notebook": {
		"get": {
		  "operationId": "notebook_get_items",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "context",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "view",
				  "embed",
				  "edit"
				],
				"default": "view"
			  },
			  "description": "Scope under which the request is made; determines fields present in response."
			},
			{
			  "name": "page",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer",
				"default": 1
			  },
			  "description": "Current page of the collection."
			},
			{
			  "name": "per_page",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer",
				"default": 10
			  },
			  "description": "Maximum number of items to be returned in result set."
			},
			{
			  "name": "search",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "Limit results to those matching a string."
			},
			{
			  "name": "exclude",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				},
				"default": []
			  },
			  "description": "Ensure result set excludes specific IDs."
			},
			{
			  "name": "include",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "integer"
				},
				"default": []
			  },
			  "description": "Limit result set to specific IDs."
			},
			{
			  "name": "order",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "asc",
				  "desc"
				],
				"default": "asc"
			  },
			  "description": "Order sort attribute ascending or descending."
			},
			{
			  "name": "orderby",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "id",
				  "include",
				  "name",
				  "slug",
				  "include_slugs",
				  "term_group",
				  "description",
				  "count"
				],
				"default": "name"
			  },
			  "description": "Sort collection by term attribute."
			},
			{
			  "name": "hide_empty",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "boolean",
				"default": false
			  },
			  "description": "Whether to hide terms not assigned to any posts."
			},
			{
			  "name": "parent",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Limit result set to terms assigned to a specific parent."
			},
			{
			  "name": "post",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Limit result set to terms assigned to a specific post."
			},
			{
			  "name": "slug",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "array",
				"items": {
				  "type": "string"
				}
			  },
			  "description": "Limit result set to terms with one or more specific slugs."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  }
		},
		"post": {
		  "operationId": "notebook_create_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "description",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "HTML description of the term."
			},
			{
			  "name": "name",
			  "in": "query",
			  "required": true,
			  "schema": {
				"type": "string"
			  },
			  "description": "HTML title for the term."
			},
			{
			  "name": "slug",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "An alphanumeric identifier for the term unique to its type."
			},
			{
			  "name": "parent",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "The parent term ID."
			},
			{
			  "name": "meta",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "Meta fields."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  },
		  "requestBody": {
			"required": true,
			"content": {
			  "application/json": {
				"schema": {
				  "type": "object",
				  "properties": {
					"description": {
					  "type": "string",
					  "description": "HTML description of the term."
					},
					"name": {
					  "type": "string",
					  "description": "HTML title for the term."
					},
					"slug": {
					  "type": "string",
					  "description": "An alphanumeric identifier for the term unique to its type."
					},
					"parent": {
					  "type": "integer",
					  "description": "The parent term ID."
					},
					"meta": {
					  "type": "object",
					  "description": "Meta fields."
					}
				  }
				}
			  }
			}
		  }
		}
	  },
	  "/pos/v1/notebook/{id}": {
		"get": {
		  "operationId": "notebook_get_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "id",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Unique identifier for the term."
			},
			{
			  "name": "context",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string",
				"enum": [
				  "view",
				  "embed",
				  "edit"
				],
				"default": "view"
			  },
			  "description": "Scope under which the request is made; determines fields present in response."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  }
		},
		"post": {
		  "operationId": "notebook_update_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "id",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Unique identifier for the term."
			},
			{
			  "name": "description",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "HTML description of the term."
			},
			{
			  "name": "name",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "HTML title for the term."
			},
			{
			  "name": "slug",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "An alphanumeric identifier for the term unique to its type."
			},
			{
			  "name": "parent",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "The parent term ID."
			},
			{
			  "name": "meta",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "Meta fields."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  },
		  "requestBody": {
			"required": true,
			"content": {
			  "application/json": {
				"schema": {
				  "type": "object",
				  "properties": {
					"id": {
					  "type": "integer",
					  "description": "Unique identifier for the term."
					},
					"description": {
					  "type": "string",
					  "description": "HTML description of the term."
					},
					"name": {
					  "type": "string",
					  "description": "HTML title for the term."
					},
					"slug": {
					  "type": "string",
					  "description": "An alphanumeric identifier for the term unique to its type."
					},
					"parent": {
					  "type": "integer",
					  "description": "The parent term ID."
					},
					"meta": {
					  "type": "object",
					  "description": "Meta fields."
					}
				  }
				}
			  }
			}
		  }
		},
		"put": {
		  "operationId": "notebook_update_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "id",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Unique identifier for the term."
			},
			{
			  "name": "description",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "HTML description of the term."
			},
			{
			  "name": "name",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "HTML title for the term."
			},
			{
			  "name": "slug",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "An alphanumeric identifier for the term unique to its type."
			},
			{
			  "name": "parent",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "The parent term ID."
			},
			{
			  "name": "meta",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "Meta fields."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  },
		  "requestBody": {
			"required": true,
			"content": {
			  "application/json": {
				"schema": {
				  "type": "object",
				  "properties": {
					"id": {
					  "type": "integer",
					  "description": "Unique identifier for the term."
					},
					"description": {
					  "type": "string",
					  "description": "HTML description of the term."
					},
					"name": {
					  "type": "string",
					  "description": "HTML title for the term."
					},
					"slug": {
					  "type": "string",
					  "description": "An alphanumeric identifier for the term unique to its type."
					},
					"parent": {
					  "type": "integer",
					  "description": "The parent term ID."
					},
					"meta": {
					  "type": "object",
					  "description": "Meta fields."
					}
				  }
				}
			  }
			}
		  }
		},
		"patch": {
		  "operationId": "notebook_update_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "id",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Unique identifier for the term."
			},
			{
			  "name": "description",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "HTML description of the term."
			},
			{
			  "name": "name",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "HTML title for the term."
			},
			{
			  "name": "slug",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "string"
			  },
			  "description": "An alphanumeric identifier for the term unique to its type."
			},
			{
			  "name": "parent",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "The parent term ID."
			},
			{
			  "name": "meta",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "object"
			  },
			  "description": "Meta fields."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  },
		  "requestBody": {
			"required": true,
			"content": {
			  "application/json": {
				"schema": {
				  "type": "object",
				  "properties": {
					"id": {
					  "type": "integer",
					  "description": "Unique identifier for the term."
					},
					"description": {
					  "type": "string",
					  "description": "HTML description of the term."
					},
					"name": {
					  "type": "string",
					  "description": "HTML title for the term."
					},
					"slug": {
					  "type": "string",
					  "description": "An alphanumeric identifier for the term unique to its type."
					},
					"parent": {
					  "type": "integer",
					  "description": "The parent term ID."
					},
					"meta": {
					  "type": "object",
					  "description": "Meta fields."
					}
				  }
				}
			  }
			}
		  }
		},
		"delete": {
		  "operationId": "notebook_delete_item",
		  "summary": "",
		  "description": "",
		  "parameters": [
			{
			  "name": "id",
			  "in": "path",
			  "required": true,
			  "schema": {
				"type": "string"
			  }
			},
			{
			  "name": "id",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "integer"
			  },
			  "description": "Unique identifier for the term."
			},
			{
			  "name": "force",
			  "in": "query",
			  "required": false,
			  "schema": {
				"type": "boolean",
				"default": false
			  },
			  "description": "Required to be true, as terms do not support trashing."
			}
		  ],
		  "responses": {
			"200": {
			  "description": "Successful response"
			},
			"401": {
			  "description": "Unauthorized"
			}
		  }
		}
	  }
	}
  }